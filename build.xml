<project name="workflow" default="createHtml" basedir=".">
<description>
    Build file for xml-based workflow.
</description>
<!-- Created by Carlos Araya as part of his xml workflow research -->

<!--
    We first define basic tasks that we'll use to create more complex processes

    We will also use Ant as the primary driver and execute Grunt tasks from Ant
    rather than the otoher way around or run both simultaneously.

    You can always run individual tasks or sequence by calling Ant directly.
    For example, to only run the createHtml task run this from the command line:

    ant createHtml

    if you want to run the grunt jshint task, just use

    grunt jshint  or ant jshint
-->
  <target name="createHtml">
    <description>
      Creates HTML from XML and XSLT
    </description>
      <xslt classpath="jlib/saxon.jar"
        in="book1.xml"
        out="index.html"
        style="./xslt/book.xsl">
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt>
  </target>

  <target name="createPagedMedia">
    <description>
      Converts the HTML to use with the Paged Media Style sheets
    </description>
    <xslt classpath="jlib/saxon.jar"
      in="book1.xml"
      out="book.html"
      style="./xslt/book.xsl">
      <factory name="net.sf.saxon.TransformerFactoryImpl"/>
    </xslt>
  </target>

  <target name="createPdf">
    <description>
      Uses Prince to convert the HTML file to PDF
    </description>
    <exec executable="prince">
      <arg value="--verbose"/>
      <arg value="book.html"/>
      <arg value="test-book.pdf"/>
    </exec>
  </target>

  <target name="PdfProcess">
    <description>
      Runs the conversion from XML to HTML and then from HTML to PDF
    </description>
    <antcall target="createPagedMedia"/>
    <antcall target="createPdf"/>
  </target>

  <target name="jshint">
    <description>
      Runs Grunt's jshint task
    </description>
    <exec executable="grunt">
      <arg value="jshint"/>
    </exec>
  </target>
</project>
